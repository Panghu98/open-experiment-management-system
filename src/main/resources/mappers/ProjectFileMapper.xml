<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.swpu.uchain.openexperiment.dao.ProjectFileMapper">
  <resultMap id="BaseResultMap" type="com.swpu.uchain.openexperiment.domain.ProjectFile">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="project_group_id" jdbcType="BIGINT" property="projectGroupId" />
    <result column="download_times" jdbcType="INTEGER" property="downloadTimes" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="file_type" jdbcType="INTEGER" property="fileType" />
    <result column="size" jdbcType="VARCHAR" property="size" />
    <result column="upload_time" jdbcType="TIMESTAMP" property="uploadTime" />
    <result column="upload_user_id" jdbcType="BIGINT" property="uploadUserId" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from project_file
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.swpu.uchain.openexperiment.domain.ProjectFile">
    insert into project_file (id, project_group_id, download_times, 
      file_name, file_type, `size`, 
      upload_time, upload_user_id)
    values (#{id,jdbcType=BIGINT}, #{projectGroupId,jdbcType=BIGINT}, #{downloadTimes,jdbcType=INTEGER}, 
      #{fileName,jdbcType=VARCHAR}, #{fileType,jdbcType=INTEGER}, #{size,jdbcType=VARCHAR}, 
      #{uploadTime,jdbcType=TIMESTAMP}, #{uploadUserId,jdbcType=BIGINT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.swpu.uchain.openexperiment.domain.ProjectFile">
    update project_file
    set project_group_id = #{projectGroupId,jdbcType=BIGINT},
      download_times = #{downloadTimes,jdbcType=INTEGER},
      file_name = #{fileName,jdbcType=VARCHAR},
      file_type = #{fileType,jdbcType=INTEGER},
      `size` = #{size,jdbcType=VARCHAR},
      upload_time = #{uploadTime,jdbcType=TIMESTAMP},
      upload_user_id = #{uploadUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, project_group_id, download_times, file_name, file_type, `size`, upload_time,
    upload_user_id
    from project_file
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, project_group_id, download_times, file_name, file_type, `size`, upload_time, 
    upload_user_id
    from project_file
  </select>
  <select id="selectByProjectName" resultMap="BaseResultMap">
    select * from project_file
    where file_name = #{fileName}
  </select>
  <update id="updateFileDownloadTime" parameterType="com.swpu.uchain.openexperiment.domain.ProjectFile">
    update project_file
    set download_times = download_times+1
    where file_name=#{fileName}
  </update>
  <select id="selectByFileNameAndUploadId" resultMap="BaseResultMap">
    select * from project_file
    where file_name=#{fileName} and upload_user_id=#{uploadUserId}
  </select>
  <select id="selectFileIdByProjectGroupId" resultMap="BaseResultMap">
    select id
    from project_file
    where project_group_id=#{projectGroupId}
  </select>
  <select id="getFileNameById" resultMap="BaseResultMap">
    select file_name
    from project_file
    where project_group_id=#{projectGroupId}
  </select>
  <select id="selectByGroupIdAndKeyWord" resultMap="BaseResultMap">
    select id, project_group_id, download_times, file_name, file_type, `size`, upload_time,
    upload_user_id
    from project_file
    where project_group_id = #{param1}
    and file_name like '%${keyWord}%'
  </select>

</mapper>