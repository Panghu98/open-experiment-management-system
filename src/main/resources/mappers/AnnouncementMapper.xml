<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.swpu.uchain.openexperiment.dao.AnnouncementMapper">
  <resultMap id="BaseResultMap" type="com.swpu.uchain.openexperiment.domain.Announcement">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="publisher_id" jdbcType="BIGINT" property="publisherId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="publish_time" jdbcType="TIMESTAMP" property="publishTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap id="ListResultMap" type="com.swpu.uchain.openexperiment.VO.AnnouncementListVO">
    <id column="id" jdbcType="BIGINT" property="announcementId" />
    <result column="publish_time" jdbcType="TIMESTAMP" property="publishTime" />
    <result column="title" jdbcType="VARCHAR" property="title" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from announcement
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.swpu.uchain.openexperiment.domain.Announcement">
    insert into announcement (id, publisher_id, title, 
      content, publish_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{publisherId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{publishTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.swpu.uchain.openexperiment.domain.Announcement">
    update announcement
    set publisher_id = #{publisherId,jdbcType=BIGINT},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, publisher_id, title, content, publish_time, update_time
    from announcement
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, publisher_id, title, content, publish_time, update_time
    from announcement
  </select>
  <select id="selectOrderByTime" resultMap="ListResultMap">
    select id, title, publish_time
    from announcement
    order by publish_time
    desc
  </select>
</mapper>